[tool.poetry]
name = "energy-monitor-importer"
version = "0.1.0"
description = "Import data from Shelly 3EM to Influxdb"
authors = ["kaklakariada <kaklakariada@users.noreply.github.com>"]
license = "GPL"
readme = "README.md"
packages = [{ include = "importer", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12"
typer = "^0.12.4"
influxdb-client = "^1.45.0"
requests = "^2.32.2"
websockets = "^13.0"
pytz = "^2024.1"
tqdm = "^4.66.4"
pandas = "^2.2.2"
polars = { extras = ["plot"], version = "^1.5.0" }


[tool.poetry.group.dev.dependencies]
types-requests = "^2.32.0.20240523"
types-tqdm = "^4.66.0.3"
types-pytz = "^2024.1.0.20240417"
types-influxdb-client = "^1.45.0.20240814"
mypy = "^1.11.1"
black = { version = "^24.8.0", extras = ["jupyter"] }
nox = "^2024.4.15"
isort = "^5.12.0"
pytest = "^8.2.2"
pylint = "^3.2.5"
testcontainers = "^4.8.0"
jupyterlab = "^4.2.5"
jedi-language-server = "^0.41.4"                      # for jupyter
pyarrow = "^17.0.0"                                   # data analysis


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
main = "importer.main:main"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
verbose = false

[tool.isort]
profile = "black"
#force_grid_wrap = 2

[tool.pytest.ini_options]
markers = [
    "shelly: marks tests as requiring a real device (deselect with '-m \"not shelly\"')",
]
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    #"--log-cli-level=debug",
]
filterwarnings = ["ignore::DeprecationWarning:reactivex.internal.constants"]


[tool.mypy]
explicit_package_bases = true
namespace_packages = true
warn_return_any = true
warn_unused_configs = true
exclude = []
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_subclassing_any = true
disallow_any_generics = false
disallow_any_explicit = false

[tool.pylint.main]
fail-under = 10
source-roots = ["src", "tests"]
suggestion-mode = true

[tool.pylint.format]
max-line-length = 140

[tool.pylint.logging]
logging-format-style = "new"
logging-modules = ["logging"]

[tool.pylint."messages control"]
confidence = [
    "HIGH",
    "CONTROL_FLOW",
    "INFERENCE",
    "INFERENCE_FAILURE",
    "UNDEFINED",
]

disable = [
    # Defaults
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "use-implicit-booleaness-not-comparison-to-string",
    "use-implicit-booleaness-not-comparison-to-zero",
    # Custom
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "logging-fstring-interpolation",
    "too-few-public-methods",
    "duplicate-code",
]
